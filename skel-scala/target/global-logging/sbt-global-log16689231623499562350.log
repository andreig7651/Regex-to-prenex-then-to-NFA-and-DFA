[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.7.1 (Private Build Java 17.0.5)[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 60.994ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 55.3182ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.2396ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /mnt/d/Anul 3/Semestrul 1/Limbaje formale si automate/skel-scala-e2/skel-scala/project[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /mnt/d/Anul 3/Semestrul 1/Limbaje formale si automate/skel-scala-e2/skel-scala/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 16.7773 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(skel-scala-build) took 36.3739ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id skel-scala-build, base: /mnt/d/Anul 3/Semestrul 1/Limbaje formale si automate/skel-scala-e2/skel-scala/project, plugins: List(<none>))) took 71.4017ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /mnt/d/Anul 3/Semestrul 1/Limbaje formale si automate/skel-scala-e2/skel-scala/project, returning: (skel-scala-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 91.776ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 0.2655ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/mnt/d/Anul%203/Semestrul%201/Limbaje%20formale%20si%20automate/skel-scala-e2/skel-scala/project/, ...) took 154.9635ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 328.1559ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 5.4893ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 56.2066ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 5.0083ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 370.4597ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 105.4901ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 1.6975ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /mnt/d/Anul 3/Semestrul 1/Limbaje formale si automate/skel-scala-e2/skel-scala/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 1881.0789ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.0041ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /mnt/d/Anul 3/Semestrul 1/Limbaje formale si automate/skel-scala-e2/skel-scala[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 4.5854ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found root project root w/ remaining [0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 3.4792 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project root from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(root) took 4.0341ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id root, base: /mnt/d/Anul 3/Semestrul 1/Limbaje formale si automate/skel-scala-e2/skel-scala, plugins: List(<none>))) took 8.7084ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /mnt/d/Anul 3/Semestrul 1/Limbaje formale si automate/skel-scala-e2/skel-scala, returning: (root)[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 186.549ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 106.1365ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/mnt/d/Anul%203/Semestrul%201/Limbaje%20formale%20si%20automate/skel-scala-e2/skel-scala/, ...) took 2176.3102ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 2192.8838ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 0.3167ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 12.0488ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 0.5439ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: Def.make(settings)... took 73.8196ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: structureIndex took 23.5484ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: mkStreams took 0.0028ms[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to LFA-2022-2023 (in build file:/mnt/d/Anul%203/Semestrul%201/Limbaje%20formale%20si%20automate/skel-scala-e2/skel-scala/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(test, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / test[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /mnt/d/Anul 3/Semestrul 1/Limbaje formale si automate/skel-scala-e2/skel-scala/target/scala-2.13/classes ...[0m
[0m[[0m[33mwarn[0m] [0m[0m3 deprecations (since 2.13.3); re-run with -deprecation for details[0m
[0m[[0m[33mwarn[0m] [0m[0mone warning found[0m
[0m[[0m[33mwarn[0m] [0m[0mIn the last 10 seconds, 5.105 (51.1%) were spent in GC. [Heap: 0.01GB free of 1.00GB, max 1.00GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.[0m
[0m[[0m[33mwarn[0m] [0m[0mIn the last 10 seconds, 9.366 (95.4%) were spent in GC. [Heap: 0.01GB free of 1.00GB, max 1.00GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.[0m
[0m[[0m[33mwarn[0m] [0m[0mIn the last 12517 seconds, 9558.778 (76.4%) were spent in GC. [Heap: 0.01GB free of 1.00GB, max 1.00GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.[0m
